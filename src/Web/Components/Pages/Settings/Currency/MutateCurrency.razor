@using XClaim.Common.Dtos
@inject ICurrencyService Http
@inject ISnackbar Snackbar

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;
    
    [Parameter]
    public Guid? Id { get; set; }
    
    private string ActionText {
        get { return Id == null ? "Create" : "Update"; }
    }

    private bool Loading { get; set; }

    private string Title { get; set; } = string.Empty;

    private CurrencyResponse Item { get; set; } = new CurrencyResponse();

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        if (Id != null) {
            Loading = true;
            var response = (await Http.GetByIdAsync(Id.Value)).Data;
            if (response != null) Item = response;
            Loading = false;
        }
    }

    async Task Submit() {
        var result = Id == null ? (await Http.CreateAsync(Item)) : (await Http.UpdateAsync(Item));
        MudDialog.Close(DialogResult.Ok(result.Succeeded));
    }

    async Task TriggerArchive(bool state) {
        if (Item?.Id != null && state) {
            var result = (await Http.ArchiveAsync(Item.Id.Value)).Succeeded;
            Snackbar.Add(result ? "Deleted successfully" : "Archiving failed", result ? Severity.Success : Severity.Error);
            MudDialog.Close(DialogResult.Ok(result));
        }
    }
}

<MudDialog>
    <TitleContent>
        <MudStack Row="true" Justify="@( Id == null ? Justify.Center : Justify.SpaceBetween)">
            <MudText Align="Align.Center" Typo="Typo.h5">@Title</MudText>
            @if (Id != null) {
                <ArchiveConfirmation Form="true" OnArchived="TriggerArchive"></ArchiveConfirmation>
            }
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudOverlay Visible="Loading" DarkBackground="true" Absolute="true">
            <MudProgressCircular Color="Color.Default" Style="height:96px;width:96px;" Indeterminate="true" />
        </MudOverlay>
        <MudContainer Class="my-4" MaxWidth="MaxWidth.Small">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudTextField Variant="Variant.Outlined" @bind-Value="Item.Name" T="string" Label="Name"/>
                        </MudItem>
                        <MudItem xs="6">
                            <MudTextField Variant="Variant.Outlined" @bind-Value="Item.Symbol" T="string" Label="Symbol"/>
                        </MudItem>
                        <MudItem xs="6">
                            <MudTextField Variant="Variant.Outlined" @bind-Value="Item.Rate" T="decimal" Label="Rate"/>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSwitch @bind-Checked="@Item.Active" Color="Color.Primary" Label="@(Item.Active ? "Enabled" : "Disabled")"/>
                        </MudItem>
                        <MudItem xs="12">
                            <MudTextField Variant="Variant.Outlined" Lines="4" @bind-Value="Item.Description" T="string" Label="Description"/>
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit" Size="Size.Large" Class="px-12 py-3">@ActionText</MudButton>
    </DialogActions>
</MudDialog>