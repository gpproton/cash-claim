@using XClaim.Common.Dtos
@using XClaim.Common.Helpers
@inject ICategoryService Http
@page "/app/settings/category"
@attribute [Authorize]

@code {
    private string Search { get; set; } = string.Empty;
    private bool Loading { get; set; }
    private int Current { get; set; } = 1;
    MudDataGrid<CategoryResponse>? _dataGrid;
    private DateRange _dateRange = WebConst.AppDateRange;
    private HashSet<CategoryResponse> SelectedItems { get; set; } = new HashSet<CategoryResponse>();
    
    private async Task<GridData<CategoryResponse>> ServerDataFunc(GridState<CategoryResponse> state) {
        SelectedItems.Clear();
        this.Loading = true;
        var items = await Http.GetAllAsync(new PaginationFilter { Page = Current, PerPage = state.PageSize });
        this.Loading = false;
        return new GridData<CategoryResponse> {
            Items = items.Data,
            TotalItems = items.Total
        };
    }
    
    private Func<CategoryResponse, bool> Filter => x => string.IsNullOrWhiteSpace(Search) || x.Name.Contains(Search, StringComparison.OrdinalIgnoreCase);
    
    
    private async Task ArchiveSelectedItems(bool allow) {
        if (!allow) return;
        List<Guid> items = SelectedItems
        .Where(f => f?.Id != null)
        .Select(f => ((Guid) f.Id!)).ToList();
        if (items.Count > 0) {
            var result = (await Http.ArchiveRangeAsync(items));
            await ReloadList(result.Succeeded);
        }
    }
    
    private async Task ReloadList(bool reload) {
        if (reload) await _dataGrid!.ReloadServerData();
    }
}

<Title>Claim categories</Title>

<MudDataGrid @ref="_dataGrid" T="CategoryResponse" MultiSelection="true" SelectedItems="SelectedItems" Loading="Loading"
             ServerData="ServerDataFunc" Height="@WebConst.TableHeight" Hover="true" SortMode="SortMode.Multiple"
             Filterable="false" QuickFilter="@Filter" Hideable="true" CurrentPage="Current">
    <ToolBarContent>
        <TableToolbar TFilter="DateDialog" TValue="DateRange" TCreate="FormDialog" IsFilterActive="true" @bind-Value="_dateRange" @bind-Search="Search">
            <ArchiveConfirmation Count="@SelectedItems.Count" OnArchived="ArchiveSelectedItems"></ArchiveConfirmation>
        </TableToolbar>
    </ToolBarContent>
    <LoadingContent>
         <TableLoading></TableLoading>
    </LoadingContent>
    <Columns>
        <SelectColumn T="CategoryResponse" ShowInFooter="false" ShowInHeader="false" />
        <Column T="CategoryResponse" Field="Name" />
        <Column T="CategoryResponse" Field="Active" />
        <Column T="CategoryResponse" Field="Company">
            <CellTemplate>
                @(context.Item.Company?.ShortName ?? "None")
            </CellTemplate>
        </Column>
        <Column T="CategoryResponse" Field="Description" />
        <Column T="CategoryResponse">
            <CellTemplate>
                <MudIconButton Class="pa-2" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Warning" />
                <MudIconButton Class="pa-2 ml-1" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" />
            </CellTemplate>
        </Column>
    </Columns>
    <PagerContent>
         <MudDataGridPager T="CategoryResponse" PageSizeOptions="WebConst.AppPaged" />
    </PagerContent>
</MudDataGrid>