@using XClaim.Common.Dtos
@using XClaim.Common.Helpers
@using XClaim.Web.Components.Pages.User.Components
@page "/app/users/transfer-request"
@inject IUserService Http
@attribute [Authorize(Roles = "System")]

@code {
    private string Search { get; set; } = string.Empty;
    private bool Loading { get; set; }
    private int Current { get; set; } = 1;
    MudDataGrid<TransferRequestItem>? _dataGrid;
    private HashSet<TransferRequestItem> SelectedItems { get; set; } = new HashSet<TransferRequestItem>();
    private Func<TransferRequestItem, bool> Filter => x =>
    string.IsNullOrWhiteSpace(Search)
    || x.User!.Contains(Search, StringComparison.OrdinalIgnoreCase)
    || x.Email!.Contains(Search, StringComparison.OrdinalIgnoreCase);
    
    private async Task<GridData<TransferRequestItem>> ServerDataFunc(GridState<TransferRequestItem> state) {
        SelectedItems.Clear();
        this.Loading = true;
        var filter = new SearchFilter {
            Page = Current,
            PerPage = state.PageSize,
            Search = Search.Length > 2 ? Search : null
        };
        var items = await Http.GetAllTransferAsync(filter);
        this.Loading = false;
        return new GridData<TransferRequestItem> {
            Items = items.Data,
            TotalItems = items.Total
        };
    }
    
    // private async Task ArchiveSelectedItems(bool allow) {
    //     if (!allow) return;
    //     List<Guid> items = SelectedItems
    //     .Where(f => f?.Id != null)
    //     .Select(f => ((Guid) f.Id!)).ToList();
    //     if (items.Count > 0) {
    //         var result = (await Http.ArchiveRangeAsync(items));
    //         await ReloadList(result.Succeeded);
    //     }
    // }
    
    private async Task ReloadList(bool reload) {
        if (reload) await _dataGrid!.ReloadServerData();
    }
}

<Title>User Account Transfers</Title>

<MudDataGrid @ref="_dataGrid" Dense="true" T="TransferRequestItem" MultiSelection="true" SelectedItems="SelectedItems" ServerData="ServerDataFunc"
             Loading="Loading"Height="@WebConst.TableHeight" Hover="true" FixedHeader="true" FixedFooter="true"
             SortMode="SortMode.Multiple" Filterable="false" QuickFilter="@Filter" Hideable="true" CurrentPage="Current">
    <ToolBarContent>
        <TableToolbar TFilter="DateDialog" TValue="DateRange" TCreate="MutateUser" IsFilterActive="true" IsCreateActive="false" @bind-Search="Search">
            @* <ConfirmationDialog Count="@SelectedItems.Count" OnTriggered="ArchiveSelectedItems"></ConfirmationDialog> *@
        </TableToolbar>
    </ToolBarContent>
    <LoadingContent>
         <TableLoading></TableLoading>
    </LoadingContent>
    <Columns>
        <SelectColumn T="TransferRequestItem" ShowInFooter="false" ShowInHeader="false" />
        @* <Column T="TransferRequestItem"> *@
        @*     <CellTemplate> *@
        @*         <MudStack Spacing="2" Row="true"> *@
        @*             <FormEditTrigger TForm="MutateUser" Id="context.Item.Id!.Value" OnTriggered="ReloadList"></FormEditTrigger> *@
        @*         </MudStack> *@
        @*     </CellTemplate> *@
        @* </Column> *@
        <Column T="TransferRequestItem" Field="User" Title="Name" />
        <Column T="TransferRequestItem" Field="Email" />
        <Column T="TransferRequestItem" Field="Completed">
            <CellTemplate>
                <MudChip Label="true">@(context.Item.Completed ? "Yes" : "No")</MudChip>
            </CellTemplate>
        </Column>
        <Column T="TransferRequestItem" Field="Company" Title="New Company" />
        <Column T="TransferRequestItem" Field="PreviousCompany" Title="Previous Company" />
    </Columns>
    <PagerContent>
         <MudDataGridPager T="TransferRequestItem" PageSizeOptions="WebConst.AppPaged" />
    </PagerContent>
</MudDataGrid>