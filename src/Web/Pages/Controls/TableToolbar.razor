@inject IDialogService DialogService
@typeparam TDialog where TDialog : ComponentBase
@typeparam TValue

@code {
    // Search bindings
    string _search = string.Empty;
    
    [Parameter]
    public string Search { get => _search; set {
        if(value == _search) return;
        _search = value;  
        if(SearchChanged.HasDelegate)  SearchChanged.InvokeAsync(_search);
    }}
    
    [Parameter]
    public EventCallback<string?> SearchChanged { get; set; }
    
    // Date bindings
    [Parameter]
    public bool IsFilterActive { get; set; }
    
    TValue? _value;
    
    [Parameter]
    public TValue? Value { get => _value; set {
        if(Equals(value, _value)) return;
        _value = value;  
        if(ValueChanged.HasDelegate)  ValueChanged.InvokeAsync(_value);
    }}

    [Parameter]
    public EventCallback<TValue?> ValueChanged { get; set; }
    
    // Create click event callback
    [Parameter]
    public EventCallback OnCreateClicked { get; set; }

    // Extra content
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public DialogParameters DialogParameters { get; set; } = new() { };

    [Parameter]
    public DialogOptions DialogOptions { get; set; } = new () { CloseButton = false, MaxWidth = MaxWidth.ExtraSmall };
    
    async Task TriggerFilter()
    {
        var dialog = await DialogService.ShowAsync<TDialog>("Filter", DialogParameters, DialogOptions);
        var result = await dialog.Result;
        if (result.Canceled) Value = result.Data.As<TValue>();
    }
}

<MudTextField @bind-Value="_search" Style="max-width: 300px" Variant="Variant.Outlined" DisableUnderLine="true" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"></MudTextField>
<MudSpacer />
@ChildContent
@if (IsFilterActive)
{
    <MudIconButton Class="pa-2" Icon="@Icons.Material.Filled.Tune" Variant="Variant.Filled" OnClick="@TriggerFilter" Color="Color.Primary" Size="Size.Large" />
}
<MudIconButton Class="px-3 py-2 mx-2" Icon="@Icons.Material.Filled.Add" OnClick="() => OnCreateClicked.InvokeAsync()" Variant="Variant.Filled" Color="Color.Success" Size="Size.Large" />
